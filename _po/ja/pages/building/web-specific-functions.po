msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"# Feel free to add content and custom Front Matter to this file.\n"
"# To modify the layout, see https://jekyllrb.com/docs/themes/#overriding-theme"
"-defaults"
msgstr ""

msgid ""
"title: Web Specific Functions\n"
"permalink: /building/web-specific-functions\n"
"---"
msgstr ""
"title: Web 版固有の関数\n"
"permalink: /ja/building/web-specific-functions\n"
"---"

msgid "## Obtaining URL parameters"
msgstr "## URL パラメータの取得"

msgid "You can obtain url parameters as `HashTable<String, String>`."
msgstr "`HashTable<String, String>` の形式で、URL パラメータを取得できます。"

msgid ""
"```cpp\n"
"  //\n"
"  // if the app launched with the parameter `siv3d.app.com?launched_via=twitte"
"r` ...\n"
"  //\n"
"  auto params = Platform::Web::System::GetURLParameters();"
msgstr ""
"```cpp\n"
"  //\n"
"  // ページが `siv3d.app.com?launched_via=twitter` という URL で開かれたら...\n"
"  //\n"
"  auto params = Platform::Web::System::GetURLParameters();"

msgid ""
"  if (auto it = params.find(U\"launched_via\"); it != params.end())\n"
"  {\n"
"    Console << U\"You launched this app via: {}\"_fmt(it->second);\n"
"  }\n"
"```"
msgstr ""

msgid "## Web Notification"
msgstr "## Web 通知"

msgid ""
"```cpp\n"
"  AsyncTask<bool> requestResult;"
msgstr ""

msgid ""
"  if (Platform::Web::Notification::IsAvailable())\n"
"  {\n"
"    requestResult = Platform::Web::Notification::RequestPermission();\n"
"  }"
msgstr ""

msgid ""
"  while (System::Update())\n"
"  {\n"
"    if (requestResult.isReady() and requestResult.get())\n"
"    {\n"
"      ToastNotificationItem item {\n"
"        .title = U\"Siv3D for Web\",\n"
"        .message = U\"Hello, Siv3D!\"\n"
"      };"
msgstr ""

msgid ""
"      Platform::Web::Notification::Show(item);\n"
"    }\n"
"  }\n"
"```"
msgstr ""

msgid "## Download Files from Virtual File System"
msgstr "## 仮想ファイルシステムからファイルをダウンロードする"

msgid ""
"```cpp\n"
"  image.save(U\"a.png\");"
msgstr ""

msgid ""
"  // Download 'a.png' in the virtual file system with the name 'a.png'\n"
"  Platform::Web::DownloadFile(U\"a.png\");\n"
"```"
msgstr ""
"  // 仮想ファイルシステム中の 'a.png' ファイルを 'a.png' という名前でダウンロードする。\n"
"  Platform::Web::DownloadFile(U\"a.png\");\n"
"```"

msgid "## Features that uses AsyncTask"
msgstr "## AsyncTask を使うことのできる機能"

msgid ""
"Some features, such as AudioDecoding or Clipboard, blocks the main loop for se"
"veral seconds.\n"
"Using platform-specific functions that returns `AsyncTask` can keep the main t"
"hread from being blocked."
msgstr ""
"AudioDecoding やクリップボードなどの、一部の機能は、数秒の間メインループをブロックする可能性があります。\n"
"`AsyncTask` を返り値にもつ、プラットフォーム固有の関数を使うことで、メインループがブロックされないようにすることができます。"

msgid "### Audio Decoding"
msgstr "### 音声ファイルのデコード"

msgid ""
"`s3d::Platform::Web::AudioProcessing::DecodeAudioFromFile` returns `AsyncTask<"
"Wave>`."
msgstr ""
"`s3d::Platform::Web::AudioProcessing::DecodeAudioFromFile` が `AsyncTask<Wave>`"
" を返します。"

msgid "<!-- TODO: hungs with asyncify -->"
msgstr ""

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // Audio audio { \"/example/test.mp3\" };\n"
"  Audio audio;\n"
"  AsyncTask<Wave> audioTask = s3d::Platform::Web::AudioDecoder::DecodeFromFile"
"(U\"/example/test.mp3\");"
msgstr ""
"```cpp\n"
"  // \n"
"  // 数秒間ブロックする可能性のある書き方\n"
"  //\n"
"  // Audio audio { \"/example/test.mp3\" };\n"
"  Audio audio;\n"
"  AsyncTask<Wave> audioTask = s3d::Platform::Web::AudioDecoder::DecodeFromFile"
"(U\"/example/test.mp3\");"

msgid ""
"  // check if audio decoding has been finished\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = Audio{ audioTask.get() };\n"
"  }\n"
"```"
msgstr ""
"  // デコードが終わったかチェック\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = Audio{ audioTask.get() };\n"
"  }\n"
"```"

msgid "### File Open Dialog"
msgstr "### ファイルを開くダイアログ"

msgid "`s3d::Platforms::Web::Dialog::Open**` returns `AsyncTask<**>`."
msgstr "`s3d::Platforms::Web::Dialog::Open**` が `AsyncTask<**>` を返します。"

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // Audio audio = Dialog::OpenAudio();\n"
"  Audio audio;\n"
"  AsyncTask<Audio> audioTask = s3d::Platforms::Web::Dialog::OpenAudio();"
msgstr ""
"```cpp\n"
"  // \n"
"  // 数秒間ブロックする可能性のある書き方\n"
"  //\n"
"  // Audio audio = Dialog::OpenAudio();\n"
"  Audio audio;\n"
"  AsyncTask<Audio> audioTask = s3d::Platforms::Web::Dialog::OpenAudio();"

msgid ""
"  // check if user has been selected file and decoding audio is finished\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = audioTask.get();\n"
"  }\n"
"```"
msgstr ""
"  // ユーザーがファイルを選択し、デコードが終わったかチェック\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = audioTask.get();\n"
"  }\n"
"```"

msgid "### Clipboard"
msgstr "### クリップボード"

msgid ""
"Only test copying and pasting are supported.\n"
"(and in FireFox, this feature is disallowed.)"
msgstr ""
"テキストのコピーと貼り付けのみサポートされています。\n"
"(そして、FireFox ではこの機能は無効化されています。)"

msgid ""
"`s3d::Platforms::Web::Clipboard::GetText` returns `AsyncTask<String>`.\n"
"(You can use `s3d::Clipboard::SetText` in ordinal way.)"
msgstr ""
"`s3d::Platforms::Web::Clipboard::GetText` が `AsyncTask<String>` を返します。\n"
"(`s3d::Clipboard::SetText` は通常通り使えます。)"

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // String text;\n"
"  // \n"
"  // if (Clibboard::GetText(text))\n"
"  // {\n"
"  //\n"
"  // }\n"
"  AsyncTask<String> textTask;\n"
"  String text;"
msgstr ""
"```cpp\n"
"  // \n"
"  // 数秒間ブロックする可能性のある書き方\n"
"  //\n"
"  // String text;\n"
"  // \n"
"  // if (Clibboard::GetText(text))\n"
"  // {\n"
"  //\n"
"  // }\n"
"  AsyncTask<String> textTask;\n"
"  String text;"

msgid "  textTask = Platforms::Web::Clipboard::GetText();"
msgstr ""

msgid ""
"  // check if text has been pasted from clipboard\n"
"  if (textTask.isReady())\n"
"  {\n"
"    text = textTask.get();\n"
"  }\n"
"```"
msgstr ""
"  // テキストが貼り付けられたか問い合わせる\n"
"  if (textTask.isReady())\n"
"  {\n"
"    text = textTask.get();\n"
"  }\n"
"```"
