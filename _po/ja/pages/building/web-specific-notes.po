msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"# Feel free to add content and custom Front Matter to this file.\n"
"# To modify the layout, see https://jekyllrb.com/docs/themes/#overriding-theme"
"-defaults"
msgstr ""

msgid ""
"title: Web Specific Notes\n"
"permalink: /building/web-specific-notes\n"
"---"
msgstr ""
"title: Web 固有の注意点\n"
"permalink: /ja/building/web-specific-notes\n"
"---"

msgid "## Table of Contents"
msgstr "## もくじ"

msgid "{% include toc.html %}"
msgstr ""

msgid "## Known Limitations"
msgstr "## 既知の制約"

msgid "### Supported Features"
msgstr "### サポートされる機能"

msgid ""
"With \"OpenSiv3D for Web,\" you can use the almost features which is supported i"
"n OpenSiv3D for Linux.\n"
"For details, check out [Implementation Status](/status)"
msgstr ""
"OpenSiv3D Web版では、OpenSiv3D Linux版で使用できる関数 (Linux版専用の関数を除く) が使用できます。\n"
"詳細は [実装状況](/ja/status) を確認してください。"

msgid "### File Systems"
msgstr "### ファイルシステム"

msgid "Your WebGL apps **cannot access any files on users' file system**."
msgstr "OpenSiv3D Web版では、**ユーザのファイルシステムにアクセスすることができません**。"

msgid ""
"Those files required on running your WebGL apps, **can be bundled on building*"
"* with emcc's `--preload` option.\n"
"These bundled files are loaded into a virtual file system; then you can access"
" these files on ordinal way."
msgstr ""
"実行時に必要なファイルは、emscirpten の `--preload` オプションを使って、**ビルド時にあらかじめバンドルする必要**があります。\n"
"バンドルされたファイルは、起動時に仮想ファイルシステムに読み込まれ、通常のファイルアクセス関数で読み書きができるようになります。"

msgid "#### Visual Studio"
msgstr ""

msgid ""
"Open the project configuration window, and add preloaded file path into `Prelo"
"aded Files` (found in [Emscripten Linker] > [Input]) in the project configurat"
"ion."
msgstr ""
"[プロジェクト] > [プロパティ] から、プロジェクト設定を開きます。プロジェクト設定の、[Emscripten リンカ] > [入力] > [プリロード"
"されるリソースファイル] に、仮想ファイルシステムに追加したいファイルまたはフォルダのパスを、`(パス)@(仮想ファイルシステム上でのフルパス)` の形式で"
"追加します。"

msgid ""
"![preload-files-on-visual-studio.png](/assets/img/building/web-specific-notes/"
"preload-files-on-visual-studio.png)"
msgstr ""

msgid "#### VSCode"
msgstr ""

msgid ""
"Open `.vscode/Link.Debug.rsp` or `.vscode/Link.Release.rsp` and add linker pre"
"loaded files option."
msgstr ""
"`.vscode/Link.Debug.rsp` または `.vscode/Link.Release.rsp` を開き、プリロードされるファイルまたはフォル"
"ダのパスを、`--preload-file (パス)@(仮想ファイルシステム上でのフルパス)`の形式で追記します。"

msgid ""
"![preload-files-on-vscode.png](/assets/img/building/web-specific-notes/preload"
"-files-on-vscode.png)"
msgstr ""

msgid "### No Sounds before User Actions"
msgstr "### 最初のユーザアクションがあるまで音が鳴らない"

msgid ""
"Some browser does not allow for WebGL apps to make any sounds before some user"
" actions, such as typing keyboards, clicking, or tapping screen."
msgstr "一部のブラウザにおいて、キーボードやマウス、タッチスクリーンの入力があるまで、WebGL アプリが音を出せないように制限をかける場合があります。"

msgid "### Cannot Switch to Fullscreen on iOS devices"
msgstr "### iPhone でフルスクリーンに移行できない"

msgid "iOS devices have no fullscreen support."
msgstr "iPhone はフルスクリーン表示の機能がありません。"

msgid "## Features that Differs Other Platforms"
msgstr "## ほかプラットフォームとの差異"

msgid "### Network"
msgstr "### 通信"

msgid ""
"Only connecting to external websocket server is supported.\n"
"Make sure to use secured websocket server in secured (https://) pages."
msgstr ""
"外部 WebSocket サーバへの接続のみサポートされています。\n"
"保護されたページ (URL が `https://` で始まる Web ページ) では、保護された WebSocket サーバにのみ接続可能です。"

msgid "<!-- TODO: asyncify allows busy loop -->"
msgstr ""

msgid ""
"```cpp\n"
"  const IPv4Address ip = IPv4Address::Localhost();\n"
"  constexpr uint16 port = 50000;"
msgstr ""

msgid "  TCPClient client;"
msgstr ""

msgid "  client.connect(ip, port);"
msgstr ""

msgid ""
"  Point serverPlayerPos{ 0, 0 };\n"
"  const Point clientPlayerPos = Cursor::Pos();"
msgstr ""

msgid ""
"  // send\n"
"  client.send(clientPlayerPos);"
msgstr ""
"  // 送信\n"
"  client.send(clientPlayerPos);"

msgid ""
"  //\n"
"  // Not Supported that polling with `client.read`.\n"
"  // Polling will freeze the browser. \n"
"  //\n"
"  // while (client.read(serverPlayerPos));\n"
"  //"
msgstr ""
"  //\n"
"  // Web 版では `client.read` を呼び出す無限ループはサポートされません。\n"
"  // ブラウザがフリーズしてしまいます。\n"
"  //\n"
"  // while (client.read(serverPlayerPos));\n"
"  //"

msgid ""
"  // recv\n"
"  client.read(serverPlayerPos);\n"
"```"
msgstr ""
"  // 受信\n"
"  client.read(serverPlayerPos);\n"
"```"

msgid "### Multi-Threading"
msgstr "### マルチスレッド"

msgid ""
"OpenSiv3D for Web is designed to be run single-threaded,\n"
"so **AsyncTask** or **std::thread** will not work as you expected."
msgstr ""
"OpenSiv3D for Web は、シングルスレッドで動作するように設計されています。\n"
"そのため、**AsyncTask** や **std::thread** は期待した動作をしません。"

msgid ""
"```cpp\n"
"  AsyncTask task\n"
"  {\n"
"    [&]\n"
"    {\n"
"      std::this_thread::sleep_for(10s);\n"
"      Console << U\"Done.\";\n"
"    }\n"
"  }\n"
"```"
msgstr ""

msgid "### Unsupported Texture Format"
msgstr "### サポートされないテクスチャフォーマット"

msgid ""
"In mobile browsers, generating textures of format `TextureFormat::R32_Float` w"
"ill be failed due to the mobile hardware limitation.\n"
"Consider using `TextureFormat::R16G16_Float` formatted textures instead."
msgstr ""
"モバイル環境では、ハードウェアの制約上、フォーマットが `TextureFormat::R32_Float` のテクスチャを生成することができません。\n"
"代わりに、フォーマットが `TextureFormat::R16G16_Float` のテクスチャを使用してください。"

msgid "### Features that Requires User Actions"
msgstr "### ユーザーアクションが必要な機能"

msgid "Some features are required to use on user actions."
msgstr "以下の機能は、ユーザーアクションと同時に使用する必要があります。"

msgid ""
"* Dialog::\\*\n"
"* ClipBoard::ReadText, SetText\n"
"* Window::SetFullscreen\n"
"* VideoReader (on Safari)\n"
"* System::LaunchBrowser"
msgstr ""

msgid ""
"```cpp\n"
"//\n"
"// will enter fullscreen on first user action after invoking `Window::SetFulls"
"creen`\n"
"// Window::SetFullscreen(true);\n"
"//"
msgstr ""
"```cpp\n"
"//\n"
"// `Window::SetFullscreen` の呼び出した後の、最初のユーザー操作があった時にフルスクリーンになります。\n"
"// Window::SetFullscreen(true);\n"
"//"

msgid ""
"if (SimpleGUI::Button(U\"Full Screen\", Point{ 20, 20 }))\n"
"{\n"
"  //\n"
"  // SimpleGUI::Button()` will be true on user `click` actions,\n"
"  // invocation of `Window::SetFullscreen` will work expectedly.\n"
"  //\n"
"  Window::SetFullscreen(true);\n"
"}\n"
"```"
msgstr ""
"if (SimpleGUI::Button(U\"Full Screen\", Point{ 20, 20 }))\n"
"{\n"
"  //\n"
"  // SimpleGUI::Button()` はユーザーのクリック操作によって true を返すので、\n"
"  // `Window::SetFullscreen` の呼び出しは期待通りのタイミングで動作します。\n"
"  //\n"
"  Window::SetFullscreen(true);\n"
"}\n"
"```"

msgid "## Features that can be Written Differently from Other Platforms"
msgstr "## 他プラットフォームと異なる書き方ができる機能"

msgid "### File Save Dialog"
msgstr "### ファイルを保存するダイアログ"

msgid ""
"`s3d::Dialog::Save` will always return \"/dev/save\" pseudo device,\n"
"which means that you cannot query users which file format they want to downloa"
"d."
msgstr ""
"`s3d::Dialog::Save` は常に仮想デバイス \"/dev/save\" を返します。\n"
"これはつまり、ユーザがどの形式でファイルを保存しようとしているかを問い合わせることはできないということを意味します。"

msgid "### Features that uses AsyncTask"
msgstr "### AsyncTask を使う機能"

msgid ""
"Some features, such as AudioDecoding or Clipboard, blocks the main loop for se"
"veral seconds."
msgstr "AudioDecoding やクリップボードなどの、一部の機能は、数秒の間メインループをブロックする可能性があります。"

msgid "#### Audio Decoding"
msgstr "#### 音声ファイルのデコード"

msgid ""
"`s3d::Platform::Web::AudioProcessing::DecodeAudioFromFile` returns `AsyncTask<"
"Wave>`."
msgstr ""
"`s3d::Platform::Web::AudioProcessing::DecodeAudioFromFile` が `AsyncTask<Wave>`"
" を返します。"

msgid "<!-- TODO: hungs with asyncify -->"
msgstr ""

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // Audio audio { \"/example/test.mp3\" };\n"
"  Audio audio;\n"
"  AsyncTask<Wave> audioTask = s3d::Platform::Web::AudioDecoder::DecodeFromFile"
"(U\"/example/test.mp3\");"
msgstr ""
"```cpp\n"
"  // \n"
"  // 数秒間ブロックする可能性のある書き方\n"
"  //\n"
"  // Audio audio { \"/example/test.mp3\" };\n"
"  Audio audio;\n"
"  AsyncTask<Wave> audioTask = s3d::Platform::Web::AudioDecoder::DecodeFromFile"
"(U\"/example/test.mp3\");"

msgid ""
"  // check if audio decoding has been finished\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = Audio{ audioTask.get() };\n"
"  }\n"
"```"
msgstr ""
"  // デコードが終わったかチェック\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = Audio{ audioTask.get() };\n"
"  }\n"
"```"

msgid "#### File Open Dialog"
msgstr "#### ファイルを開くダイアログ"

msgid "`s3d::Platforms::Web::Dialog::Open**` returns `AsyncTask<**>`."
msgstr "`s3d::Platforms::Web::Dialog::Open**` が `AsyncTask<**>` を返します。"

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // Audio audio = Dialog::OpenAudio();\n"
"  Audio audio;\n"
"  AsyncTask<Audio> audioTask = s3d::Platforms::Web::Dialog::OpenAudio();"
msgstr ""
"```cpp\n"
"  // \n"
"  // 数秒間ブロックする可能性のある書き方\n"
"  //\n"
"  // Audio audio = Dialog::OpenAudio();\n"
"  Audio audio;\n"
"  AsyncTask<Audio> audioTask = s3d::Platforms::Web::Dialog::OpenAudio();"

msgid ""
"  // check if user has been selected file and decoding audio is finished\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = audioTask.get();\n"
"  }\n"
"```"
msgstr ""
"  // ユーザーがファイルを選択し、デコードが終わったかチェック\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = audioTask.get();\n"
"  }\n"
"```"

msgid "#### Clipboard"
msgstr "#### クリップボード"

msgid ""
"Only test copying and pasting are supported.\n"
"(and in FireFox, this feature is disallowed.)"
msgstr ""
"テキストのコピーと貼り付けのみサポートされています。\n"
"(そして、FireFox ではこの機能は無効化されています。)"

msgid ""
"`s3d::Platforms::Web::Clipboard::GetText` returns `AsyncTask<String>`.\n"
"(You can use `s3d::Clipboard::SetText` in ordinal way.)"
msgstr ""
"s3d::Platforms::Web::Clipboard::GetText` が `AsyncTask<String>` を返します。\n"
"(`s3d::Clipboard::SetText` は通常通り使えます。)"

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // String text;\n"
"  // \n"
"  // if (Clibboard::GetText(text))\n"
"  // {\n"
"  //\n"
"  // }\n"
"  AsyncTask<String> textTask;\n"
"  String text;"
msgstr ""
"```cpp\n"
"  // \n"
"  // 数秒間ブロックする可能性のある書き方\n"
"  //\n"
"  // String text;\n"
"  // \n"
"  // if (Clibboard::GetText(text))\n"
"  // {\n"
"  //\n"
"  // }\n"
"  AsyncTask<String> textTask;\n"
"  String text;"

msgid "  textTask = Platforms::Web::Clipboard::GetText();"
msgstr ""

msgid ""
"  // check if text has been pasted from clipboard\n"
"  if (textTask.isReady())\n"
"  {\n"
"    text = textTask.get();\n"
"  }\n"
"```"
msgstr ""
"  // テキストが貼り付けられたか問い合わせる\n"
"  if (textTask.isReady())\n"
"  {\n"
"    text = textTask.get();\n"
"  }\n"
"```"
