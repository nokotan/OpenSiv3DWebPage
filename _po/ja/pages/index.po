msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"# Feel free to add content and custom Front Matter to this file.\n"
"# To modify the layout, see https://jekyllrb.com/docs/themes/#overriding-theme"
"-defaults"
msgstr ""

msgid ""
"title: OpenSiv3D for Web\n"
"permalink: /index\n"
"css: \n"
"  - /assets/css/playground.css\n"
"  - /assets/css/gallary.css\n"
"---"
msgstr ""
"title: OpenSiv3D for Web\n"
"permalink: /ja/index\n"
"css: \n"
"  - /assets/css/playground.css\n"
"  - /assets/css/gallary.css\n"
"---"

msgid ""
"![play ground alternative](https://raw.githubusercontent.com/Siv3D/File/master"
"/v6/screenshot/hello-siv3d.gif)"
msgstr ""

msgid "OpenSiv3D for Web brings you to developing WebGL application with C/C++!"
msgstr "OpenSiv3D for Web は WebGL アプリケーションを C/C++ で開発するためのライブラリです。"

msgid "## Getting Started"
msgstr "## はじめる"

msgid "{% include button.html url=\"download\" text=\"Download OpenSiv3D for Web\" %}"
msgstr ""

msgid ""
"```cpp\n"
"# include <Siv3D.hpp>"
msgstr ""

msgid ""
"void Main()\n"
"{\n"
"  // Set background color to sky blue\n"
"  Scene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });"
msgstr ""
"void Main()\n"
"{\n"
"  // 背景を水色にする\n"
"  Scene::SetBackground(ColorF{ 0.8, 0.9, 1.0 });"

msgid ""
"  // Create a new font\n"
"  const Font font{ 60 };"
msgstr ""
"  // 通常のフォントを作成\n"
"  const Font font{ 60 };"

msgid ""
"  // Create a new emoji font\n"
"  const Font emojiFont{ 60, Typeface::ColorEmoji };"
msgstr ""
"  // 絵文字用フォントを作成\n"
"  const Font emojiFont{ 60, Typeface::ColorEmoji };"

msgid ""
"  // Set emojiFont as a fallback\n"
"  font.addFallback(emojiFont);"
msgstr ""
"  // `font` が絵文字用フォントも使えるようにする\n"
"  font.addFallback(emojiFont);"

msgid ""
"  // Create a texture from an image file\n"
"  const Texture texture{ U\"example/windmill.png\" };"
msgstr ""
"  // 画像ファイルからテクスチャを作成\n"
"  const Texture texture{ U\"example/windmill.png\" };"

msgid ""
"  // Create a texture from an emoji\n"
"  const Texture emoji{ U\"🐈\"_emoji };"
msgstr ""
"  // 絵文字からテクスチャを作成\n"
"  const Texture emoji{ U\"🐈\"_emoji };"

msgid ""
"  // Coordinates of the emoji\n"
"  Vec2 emojiPos{ 300, 150 };"
msgstr ""
"  // 絵文字を描画する座標\n"
"  Vec2 emojiPos{ 300, 150 };"

msgid ""
"  // Print a text\n"
"  Print << U\"Push [A] key\";"
msgstr ""
"  // テキストを画面にデバッグ出力\n"
"  Print << U\"Push [A] key\";"

msgid ""
"  Platform::Web::System::SetMainLoop([&]()\n"
"  {\n"
"    System::Update()"
msgstr ""
"  Platform::Web::System::SetMainLoop([&]()\n"
"  {\n"
"    System::Update()"

msgid ""
"    // Draw a texture\n"
"    texture.draw(200, 200);"
msgstr ""
"    // テクスチャを描く\n"
"    texture.draw(200, 200);"

msgid ""
"    // Put a text in the middle of the screen\n"
"    font(U\"Hello, Siv3D!🚀\").drawAt(Scene::Center(), Palette::Black);"
msgstr ""
"    // テキストを画面の中心に描く\n"
"    font(U\"Hello, Siv3D!🚀\").drawAt(Scene::Center(), Palette::Black);"

msgid ""
"    // Draw a texture with animated size\n"
"    emoji.resized(100 + Periodic::Sine0_1(1s) * 20).drawAt(emojiPos);"
msgstr ""
"    // サイズをアニメーションさせて絵文字を描く\n"
"    emoji.resized(100 + Periodic::Sine0_1(1s) * 20).drawAt(emojiPos);"

msgid ""
"    // Draw a red transparent circle that follows the mouse cursor\n"
"    Circle{ Cursor::Pos(), 40 }.draw(ColorF{ 1, 0, 0, 0.5 });"
msgstr ""
"    // マウスカーソルに追随する半透明な円を描く\n"
"    Circle{ Cursor::Pos(), 40 }.draw(ColorF{ 1, 0, 0, 0.5 });"

msgid ""
"    // When [A] key is down\n"
"    if (KeyA.down())\n"
"    {\n"
"      // Print a randomly selected text\n"
"      Print << Sample({ U\"Hello!\", U\"こんにちは\", U\"你好\", U\"안녕하세요?\" });\n"
"    }"
msgstr ""
"    // もし [A] キーが押されたら\n"
"    if (KeyA.down())\n"
"    {\n"
"      // 選択肢からランダムに選ばれたメッセージをデバッグ表示\n"
"      Print << Sample({ U\"Hello!\", U\"こんにちは\", U\"你好\", U\"안녕하세요?\" });\n"
"    }"

msgid ""
"    // When [Button] is pushed\n"
"    if (SimpleGUI::Button(U\"Button\", Vec2{ 640, 40 }))\n"
"    {\n"
"      // Move the coordinates to a random position in the screen\n"
"      emojiPos = RandomVec2(Scene::Rect());\n"
"    }\n"
"  });\n"
"}\n"
"```"
msgstr ""
"    // もし [Button] が押されたら\n"
"    if (SimpleGUI::Button(U\"Button\", Vec2{ 640, 40 }))\n"
"    {\n"
"      // 画面内のランダムな場所に座標を移動\n"
"      emojiPos = RandomVec2(Scene::Rect());\n"
"    }\n"
"  });\n"
"}\n"
"```"

msgid "## Gallary"
msgstr "## ギャラリー"

msgid "{% include gallary.html list=site.data.gamelist_v6 %}"
msgstr "{% include gallary.html list=site.data.ja.gamelist_v6 %}"

msgid "## CI Status"
msgstr "## 最新版ビルドの状態"

msgid ""
"- Stable Branch (Siv3D/OpenSiv3D.git): [![C/C++ CI for Web](https://github.com"
"/Siv3D/OpenSiv3D/actions/workflows/ccpp_web.yml/badge.svg?branch=v6_master)](h"
"ttps://github.com/Siv3D/OpenSiv3D/actions/workflows/ccpp_web.yml)\n"
"- Develop Branch (nokotan/OpenSiv3D.git): [![C/C++ CI for Web](https://github."
"com/nokotan/OpenSiv3D/actions/workflows/ccpp_web.yml/badge.svg?branch=v6_web_d"
"evelop)](https://github.com/nokotan/OpenSiv3D/actions/workflows/ccpp_web.yml)\n"
"- Develop Branch (Siv3D/OpenSiv3D.git): [![C/C++ CI for Web](https://github.co"
"m/Siv3D/OpenSiv3D/actions/workflows/ccpp_web.yml/badge.svg?branch=v6_winmac_de"
"velop)](https://github.com/Siv3D/OpenSiv3D/actions/workflows/ccpp_web.yml)"
msgstr ""
"- 安定版ブランチ (Siv3D/OpenSiv3D.git): [![C/C++ CI for Web](https://github.com/Siv3D"
"/OpenSiv3D/actions/workflows/ccpp_web.yml/badge.svg?branch=v6_master)](https:/"
"/github.com/Siv3D/OpenSiv3D/actions/workflows/ccpp_web.yml)\n"
"- 開発版ブランチ (nokotan/OpenSiv3D.git): [![C/C++ CI for Web](https://github.com/nok"
"otan/OpenSiv3D/actions/workflows/ccpp_web.yml/badge.svg?branch=v6_web_develop)"
"](https://github.com/nokotan/OpenSiv3D/actions/workflows/ccpp_web.yml)\n"
"- 開発版ブランチ (Siv3D/OpenSiv3D.git): [![C/C++ CI for Web](https://github.com/Siv3D"
"/OpenSiv3D/actions/workflows/ccpp_web.yml/badge.svg?branch=v6_winmac_develop)]"
"(https://github.com/Siv3D/OpenSiv3D/actions/workflows/ccpp_web.yml)"
