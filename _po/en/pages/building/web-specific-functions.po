msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=; plural=;\n"

msgid ""
"---\n"
"# Feel free to add content and custom Front Matter to this file.\n"
"# To modify the layout, see https://jekyllrb.com/docs/themes/#overriding-theme"
"-defaults"
msgstr ""

msgid ""
"title: Web Specific Functions\n"
"permalink: /building/web-specific-functions\n"
"---"
msgstr ""

msgid "## Obtaining URL parameters"
msgstr ""

msgid "You can obtain url parameters as `HashTable<String, String>`."
msgstr ""

msgid ""
"```cpp\n"
"  //\n"
"  // if the app launched with the parameter `siv3d.app.com?launched_via=twitte"
"r` ...\n"
"  //\n"
"  auto params = Platform::Web::System::GetURLParameters();"
msgstr ""

msgid ""
"  if (auto it = params.find(U\"launched_via\"); it != params.end())\n"
"  {\n"
"    Console << U\"You launched this app via: {}\"_fmt(it->second);\n"
"  }\n"
"```"
msgstr ""

msgid "## Web Notification"
msgstr ""

msgid ""
"```cpp\n"
"  AsyncTask<bool> requestResult;"
msgstr ""

msgid ""
"  if (Platform::Web::Notification::IsAvailable())\n"
"  {\n"
"    requestResult = Platform::Web::Notification::RequestPermission();\n"
"  }"
msgstr ""

msgid ""
"  while (System::Update())\n"
"  {\n"
"    if (requestResult.isReady() and requestResult.get())\n"
"    {\n"
"      ToastNotificationItem item {\n"
"        .title = U\"Siv3D for Web\",\n"
"        .message = U\"Hello, Siv3D!\"\n"
"      };"
msgstr ""

msgid ""
"      Platform::Web::Notification::Show(item);\n"
"    }\n"
"  }\n"
"```"
msgstr ""

msgid "## Download Files from Virtual File System"
msgstr ""

msgid ""
"```cpp\n"
"  image.save(U\"a.png\");"
msgstr ""

msgid ""
"  // Download 'a.png' in the virtual file system with the name 'a.png'\n"
"  Platform::Web::DownloadFile(U\"a.png\");\n"
"```"
msgstr ""

msgid "## Write Additional Assets into Virtual File System from Server"
msgstr ""

msgid ""
"```cpp\n"
"  // Download 'windmill.png' into the virtual file system with the name 'windm"
"ill.png'\n"
"  Platform::Web::FetchFileIfNotExists(U\"example/windmill.png\");\n"
"```"
msgstr ""

msgid "## Features that uses AsyncTask"
msgstr ""

msgid ""
"Some features, such as AudioDecoding or Clipboard, blocks the main loop for se"
"veral seconds.\n"
"Using platform-specific functions that returns `AsyncTask` can keep the main t"
"hread from being blocked."
msgstr ""

msgid "### Awaiting AsyncTask"
msgstr ""

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // Audio audio { U\"/example/test.mp3\" };\n"
"  Audio audio;\n"
"  AsyncTask<Wave> audioTask = s3d::Platform::Web::AudioDecoder::DecodeFromFile"
"(U\"/example/test.mp3\");"
msgstr ""

msgid ""
"  // Synchronously wait until the audioTask gets ready.\n"
"  if (auto resolvedAudio = s3d::Platform::Web::System::WaitForFutureResolved(a"
"udioTask))\n"
"  {\n"
"    audio = *resolvedAudio;\n"
"  }\n"
"```"
msgstr ""

msgid "### Audio Decoding"
msgstr ""

msgid ""
"`s3d::Platform::Web::AudioDecoder::DecodeAudioFromFile` returns `AsyncTask<Wav"
"e>`."
msgstr ""

msgid "<!-- TODO: hungs with asyncify -->"
msgstr ""

msgid ""
"  // check if audio decoding has been finished\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = Audio{ audioTask.get() };\n"
"  }\n"
"```"
msgstr ""

msgid "### File Open Dialog"
msgstr ""

msgid "`s3d::Platforms::Web::Dialog::Open**` returns `AsyncTask<**>`."
msgstr ""

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // Audio audio = Dialog::OpenAudio();\n"
"  Audio audio;\n"
"  AsyncTask<Audio> audioTask = s3d::Platforms::Web::Dialog::OpenAudio();"
msgstr ""

msgid ""
"  // check if user has been selected file and decoding audio is finished\n"
"  if (audioTask.isReady())\n"
"  {\n"
"    audio = audioTask.get();\n"
"  }\n"
"```"
msgstr ""

msgid "### Clipboard"
msgstr ""

msgid ""
"Only test copying and pasting are supported.\n"
"(and in FireFox, this feature is disallowed.)"
msgstr ""

msgid ""
"`s3d::Platforms::Web::Clipboard::GetText` returns `AsyncTask<String>`.\n"
"(You can use `s3d::Clipboard::SetText` in ordinal way.)"
msgstr ""

msgid ""
"```cpp\n"
"  // \n"
"  // Maybe blocks for several seconds\n"
"  //\n"
"  // String text;\n"
"  // \n"
"  // if (Clibboard::GetText(text))\n"
"  // {\n"
"  //\n"
"  // }\n"
"  AsyncTask<String> textTask;\n"
"  String text;"
msgstr ""

msgid "  textTask = Platforms::Web::Clipboard::GetText();"
msgstr ""

msgid ""
"  // check if text has been pasted from clipboard\n"
"  if (textTask.isReady())\n"
"  {\n"
"    text = textTask.get();\n"
"  }\n"
"```"
msgstr ""
