msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=; plural=;\n"

msgid ""
"---\n"
"# Feel free to add content and custom Front Matter to this file.\n"
"# To modify the layout, see https://jekyllrb.com/docs/themes/#overriding-theme"
"-defaults"
msgstr ""

msgid ""
"title: Web Specific Notes\n"
"permalink: /building/web-specific-notes\n"
"---"
msgstr ""

msgid "## Table of Contents"
msgstr ""

msgid "{% include toc.html %}"
msgstr ""

msgid "## Known Limitations"
msgstr ""

msgid "### Supported Features"
msgstr ""

msgid ""
"With \"OpenSiv3D for Web,\" you can use the almost features which is supported i"
"n OpenSiv3D for Linux.\n"
"For details, check out [Implementation Status](/status)"
msgstr ""

msgid "### File Systems"
msgstr ""

msgid "Your WebGL apps **cannot access any files on users' file system**."
msgstr ""

msgid ""
"Those files required on running your WebGL apps, **can be bundled on building*"
"* with emcc's `--preload` option.\n"
"These bundled files are loaded into a virtual file system; then you can access"
" these files on ordinal way."
msgstr ""

msgid "#### Visual Studio"
msgstr ""

msgid ""
"Open the project configuration window, and add preloaded file path into `Prelo"
"aded Files` (found in [Emscripten Linker] > [Input]) in the project configurat"
"ion."
msgstr ""

msgid ""
"![preload-files-on-visual-studio.png](/assets/img/building/web-specific-notes/"
"preload-files-on-visual-studio.png)"
msgstr ""

msgid "#### VSCode"
msgstr ""

msgid ""
"Open `.vscode/Link.Debug.rsp` or `.vscode/Link.Release.rsp` and add linker pre"
"loaded files option."
msgstr ""

msgid ""
"![preload-files-on-vscode.png](/assets/img/building/web-specific-notes/preload"
"-files-on-vscode.png)"
msgstr ""

msgid "### File Save Dialog"
msgstr ""

msgid ""
"`s3d::Dialog::SaveFile` always returns `None`.\n"
"Please use `s3d::Platform::Web::DownloadFile` to download files that stored in"
" the virtual file system."
msgstr ""

msgid ""
"```cpp\n"
"  //\n"
"  // Not Supported in Web. \n"
"  //\n"
"  // if (auto path = Dialog::SaveFile())\n"
"  // {\n"
"  //   image.save(*path);\n"
"  // }\n"
"  //"
msgstr ""

msgid ""
"  image.save(U\"a.png\");\n"
"  Platform::Web::DownloadFile(U\"a.png\");\n"
"```"
msgstr ""

msgid "### No Sounds before User Actions"
msgstr ""

msgid ""
"Some browser does not allow for WebGL apps to make any sounds before some user"
" actions, such as typing keyboards, clicking, or tapping screen."
msgstr ""

msgid "### Cannot Switch to Fullscreen on iOS devices"
msgstr ""

msgid "iOS devices have no fullscreen support."
msgstr ""

msgid "## Features that Differs Other Platforms"
msgstr ""

msgid "### Network"
msgstr ""

msgid ""
"Only connecting to external websocket server is supported.\n"
"Make sure to use secured websocket server in secured (https://) pages."
msgstr ""

msgid "<!-- TODO: asyncify allows busy loop -->"
msgstr ""

msgid ""
"```cpp\n"
"  const IPv4Address ip = IPv4Address::Localhost();\n"
"  constexpr uint16 port = 50000;"
msgstr ""

msgid "  TCPClient client;"
msgstr ""

msgid "  client.connect(ip, port);"
msgstr ""

msgid ""
"  Point serverPlayerPos{ 0, 0 };\n"
"  const Point clientPlayerPos = Cursor::Pos();"
msgstr ""

msgid ""
"  // send\n"
"  client.send(clientPlayerPos);"
msgstr ""

msgid ""
"  //\n"
"  // Not Supported that polling with `client.read`.\n"
"  // Polling will freeze the browser. \n"
"  //\n"
"  // while (client.read(serverPlayerPos));\n"
"  //"
msgstr ""

msgid ""
"  // recv\n"
"  client.read(serverPlayerPos);\n"
"```"
msgstr ""

msgid "### Multi-Threading"
msgstr ""

msgid ""
"OpenSiv3D for Web is designed to be run single-threaded,\n"
"so **AsyncTask** or **std::thread** will not work as you expected."
msgstr ""

msgid ""
"```cpp\n"
"  AsyncTask task\n"
"  {\n"
"    [&]\n"
"    {\n"
"      std::this_thread::sleep_for(10s);\n"
"      Console << U\"Done.\";\n"
"    }\n"
"  }\n"
"```"
msgstr ""

msgid "### Unsupported Texture Format"
msgstr ""

msgid ""
"In mobile browsers, generating textures of format `TextureFormat::R32_Float` w"
"ill be failed due to the mobile hardware limitation.\n"
"Consider using `TextureFormat::R16G16_Float` formatted textures instead."
msgstr ""

msgid "### Features that Requires User Actions"
msgstr ""

msgid "Some features are required to use on user actions."
msgstr ""

msgid ""
"* Dialog::\\*\n"
"* ClipBoard::ReadText, SetText\n"
"* Window::SetFullscreen\n"
"* VideoReader (on Safari)\n"
"* System::LaunchBrowser"
msgstr ""

msgid ""
"```cpp\n"
"//\n"
"// will enter fullscreen on first user action after invoking `Window::SetFulls"
"creen`\n"
"// Window::SetFullscreen(true);\n"
"//"
msgstr ""

msgid ""
"if (SimpleGUI::Button(U\"Full Screen\", Point{ 20, 20 }))\n"
"{\n"
"  //\n"
"  // SimpleGUI::Button()` will be true on user `click` actions,\n"
"  // invocation of `Window::SetFullscreen` will work expectedly.\n"
"  //\n"
"  Window::SetFullscreen(true);\n"
"}\n"
"```"
msgstr ""
